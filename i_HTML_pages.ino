void handleSensorPage() {
  String html ="<!DOCTYPE html> <html> <head> <title>Group16_AirQ_SENSORS</title> <style> .item { height: 25rem; display: flex; flex-direction: column; justify-content: center; text-align: center; border: 6px solid black; border-radius: 50%; flex: 1 1 25rem; } .item i { font-size: 6rem; margin-bottom: 10px; } .item p { font-size: 4rem; margin: 0; font-style: italic; } .item span { font-size: 2.5rem; margin: 0; } label { font-size: 1.5rem; } button { padding: 0.4rem 1.5rem; width: auto; margin: 20px auto; font-size: 1.2rem; } </style> </head> <body style=\"font-family: Rubik; width: 55rem; margin: auto\"> <div style=\" display: flex; flex-direction: row; align-items: center; gap: 40px; font-size: 1.6rem; \" > <a href=\"/\">Home</a> <a href=\"/wifi-config\">Wifi configs</a> <p style=\"margin-left: auto\"> Status: <b id=\"status\" style=\"color: red\">OFFLINE</b> </p> </div> <div> <h1 style=\"text-align: center; font-size: 6rem\">Sensors</h1> <div style=\" display: flex; flex-direction: row; flex-wrap: wrap; gap: 2rem; width: 100%; \" > <div class=\"item\"> <p>Temperature</p> <span><span id=\"temp\"> </span>&#8451;</span> </div> <div class=\"item\"> <p>Humidity</p> <span><span id=\"humidity\"> </span>%</span> </div> <div class=\"item\"> <p>Chemicals</p> <span><span id=\"chemical\"> </span>ppm</span> </div> <div class=\"item\"> <p>PM2.5</p> <span><span id=\"dust\"> </span>&#181;g/m&#179;</span> </div> </div> <div style=\" border: 1px solid #cdcdcd; border-radius: 10px; display: flex; flex-direction: column; padding: 2rem 3rem; width: 400px; margin: 100px auto; \" > <h1 style=\"text-align: center; font-size: 2rem\">Led configuration</h1> <form action=\"javascript:void(0);\" style=\"display: flex; flex-direction: column; width: 100%\" > <label for=\"color\">LED: </label> <input name=\"color\" type=\"color\" value=\"#ff8474\" style=\"width: 100%\" /> <label style=\"margin-top: 24px\" for=\"brightness\">Brightness: </label> <input name=\"brightness\" type=\"range\" value=\"1\" min=\"0\" max=\"1\" step=\"0.1\" /> <button type=\"submit\">Submit</button> </form> </div> </div> <script> function fetchState() { fetch('/api/state') .then((response) => response.text()) .then((data) => { let datas = data.split(' , '); document.getElementById('temp').textContent = datas[0]; document.getElementById('humidity').textContent = datas[1]; document.getElementById('chemical').textContent = datas[2]; document.getElementById('dust').textContent = datas[3]; }); } function hexToRgb(c) { if (/^#([a-f0-9]{3}){1,2}$/.test(c)) { if (c.length == 4) { c = '#' + [c[1], c[1], c[2], c[2], c[3], c[3]].join(''); } c = '0x' + c.substring(1); return [(c >> 16) & 255, (c >> 8) & 255, c & 255]; } return null; } fetchState(); setInterval(fetchState, 10000); document.querySelector('button').addEventListener('click', function (ev) { let formData = new FormData(); let [r, g, b] = hexToRgb(document.querySelector('[name=color]').value); let brightness = parseFloat( document.querySelector('[name=brightness]').value ).toFixed(2); formData.append('red', r); formData.append('green', g); formData.append('blue', b); formData.append('brightness', brightness); fetch('/api/led-config', { method: 'POST', body: formData }) .then((res) => res.text()) .then((text) => alert(text)) .catch((err) => alert(err)); }); const intervalId = setInterval(function () { fetch('/api/status') .then((response) => { if (!response.ok) throw new Error('Cannot connect'); clearInterval(intervalId); document.getElementById('status').textContent = 'ONLINE'; document.getElementById('status').style.color = 'green'; }) .catch((err) => { document.getElementById('status').textContent = 'OFFLINE'; document.getElementById('status').style.color = 'red'; }); }, 2000); </script> </body> </html>";
  server.send(200, "text/html", html);
}

void handleWifiConfigPage() {
  String html ="<!DOCTYPE html> <html> <head> <title>Group16_AirQ_WIFI_CONFIG</title> </head> <style> input { padding: 0.3rem 0.6rem; font-size: 2rem; border: 0; border-bottom: 1px solid #666; margin: 0 10px; } input:focus { outline: none; border-bottom-width: 2px; } label { font-size: 2rem; } button { padding: 0.4rem 1.5rem; width: auto; margin: 40px auto; font-size: 2rem; } .loader { border: 8px solid #f3f3f3; border-radius: 50%; border-top: 8px solid black; margin: auto; width: 30px; height: 30px; -webkit-animation: spin 1s linear infinite; animation: spin 1s linear infinite; } ";
  html +="@-webkit-keyframes spin { 0% { -webkit-transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); } } ";
  html +="@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } </style> <body style=\"width: 40rem; margin: 100px auto\"> <div style=\" display: flex; flex-direction: row; align-items: center; gap: 40px; font-size: 2rem; \" > <a href=\"/\">Home</a> <a href=\"/sensors\">Sensors</a> </div> <div style=\" border: 1px solid #cdcdcd; border-radius: 10px; display: flex; flex-direction: column; padding: 2rem 3rem; \" > <h1 style=\"text-align: center; font-size: 5rem\">Wifi config</h1> <div> <form id=\"config-form\" action=\"javascript:void(0);\" style=\"display: flex; flex-direction: column; width: 100%\" > <label for=\"ssid\">SSID: </label> <input name=\"ssid\" required /> <label style=\"margin-top: 24px\" for=\"password\">Password: </label> <input name=\"password\" type=\"password\" required /> <button id=\"submit-btn\" type=\"submit\"> <div id=\"loader\" class=\"\">Submit</div> </button> </form> </div> <span id=\"response\"></span> </div> <script> const setEnable = (enable) => { const submitBtn = document.getElementById('submit-btn'); const inner = document.getElementById('loader'); if (!enable) { submitBtn.disabled = true; inner.innerHTML = ''; inner.classList.add('loader'); } else { submitBtn.disabled = false; inner.innerHTML = 'Submit'; inner.classList.remove('loader'); } }; const getMQTTStatus = (i, N, SEC) => { fetch('/api/mqtt') .then((response) => { if (!response.ok) throw new Error('Cannot connect'); document.getElementById('response').innerHTML += 'Connecting to MQTT successfully! You are currently ONLINE<br>'; setEnable(true); }) .catch((err) => { document.getElementById( 'response' ).innerHTML += `Connecting to MQTT Failed! Attempting to try again! (${i})<br>`; if (i < N) { setTimeout(() => { getMQTTStatus(i + 1, N, SEC); }, SEC); } else setEnable(true); }); }; document .getElementById('submit-btn') .addEventListener('click', function (ev) { const inner = document.getElementById('loader'); ev.preventDefault(); let ssid = document.querySelector('[name=ssid]').value; let password = document.querySelector('[name=password]').value; if (!ssid || !password) return; let formData = new FormData(); formData.append('ssid', ssid); formData.append('password', password); setEnable(false); fetch('/api/wifi', { method: 'POST', body: formData }) .then((res) => { if (!res.ok) { if (res.status == 401) { alert('Invalid credentials'); setEnable(true); return; } else throw new Error('HTTP status: ' + res.status); } document.getElementById('response').innerHTML += 'Connecting to WiFi successfully! Trying to connecting to MQTT server<br>'; getMQTTStatus(0, 5, 4000); }) .catch((err) => { alert('Connect to WiFi Failed! ' + err.message); setEnable(true); }); }); </script> </body> </html>";
  server.send(200, "text/html", html);
}

void handleRoot() {
  String html ="<!DOCTYPE html> <html> <head> <title>Group16_AirQ_HOME</title> <style> a { padding: 1rem; text-align: center; background-color: black; color: white; border-radius: 10px; text-decoration: none; margin: 1rem auto; width: 48%; } hr { background-color: black; height: 2px; } </style> </head> <body style=\"font-family: Rubik; width: 55rem; margin: auto; font-size: 2rem\"> <p>Status: <b id=\"status\" style=\"color: red\">OFFLINE</b></p> <h1 style=\"text-align: center; font-size: 6rem\">Home</h1> <div style=\"display: flex; flex-direction: column\"> <a href=\"/wifi-config\"> Config WiFi</a> <a href=\"/sensors\"> View sensors data</a> <a href=\"/api/disconnect\"> Disconnect WiFi</a> <a href=\"#\" onclick=\"aboutUsClicked()\">About us</a> </div> </body> <script> function aboutUsClicked(ev) { alert( '------------- VL2 - GROUP 16 -------------\\n18127136 - Nguyen Dang Huynh Long\\n18127118 - Mai Dang Khanh\\n18127269 - Nguyen Thai Tan\\n ---------------------------------------------' ); } const intervalId = setInterval(function () { fetch('/api/status') .then((response) => { if (!response.ok) throw Error('error'); clearInterval(intervalId); document.getElementById('status').textContent = 'ONLINE'; document.getElementById('status').style.color = 'green'; }) .catch((err) => { document.getElementById('status').textContent = 'OFFLINE'; document.getElementById('status').style.color = 'red'; }); }, 2000); </script> </html>";
  server.send(200, "text/html", html);
}

void handleNotFound() {
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
}
